@inject IImageUploadService ImageUploadServices
@inject IAboutShowroomService AboutShowroomService

<style>
    .logo-wrapper {
        position: relative;
        display: inline-block;
        width: 120px;
        height: 120px;
    }

    .logo-circle {
        width: 100%;
        height: 100%;
        border-radius: 50%;
        object-fit: cover;
        border: 3px solid #ccc;
    }

    .logo-upload-overlay {
        position: absolute;
        bottom: 5px;
        right: 5px;
        background: rgba(0,0,0,0.6);
        color: white;
        padding: 6px;
        border-radius: 50%;
        cursor: pointer;
        transition: background 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .logo-upload-overlay:hover {
            background: rgba(0,0,0,0.8);
        }

    .hidden-file-input {
        display: none;
    }

    .logo-upload-overlay i {
        font-size: 14px;
    }

</style>

<div class="logo-wrapper">
    <img src="@LogoImage" class="logo-circle" alt="Logo" />

    <label class="logo-upload-overlay">
        <i class="bi bi-camera-fill"></i>
        <InputFile OnChange="HandleLogoImageUpload" accept=".jpg,.jpeg,.png,.gif,.jfif" class="hidden-file-input" />
    </label>
</div>

@code {
    private EntLogoImage? entLogoImage = new();
    private string ErrorMessage = "";
    [Parameter] public string LogoImage { get; set; }
    [Parameter] public string Id { get; set; }
    
    private async Task HandleLogoImageUpload(InputFileChangeEventArgs e)
    {
        ErrorMessage = "";
        try
        {
            if (e.File is not null && entLogoImage != null)
            {

                LogoImage = await ImageUploadServices.UploadImageAsync(e.File, "logos");
                entLogoImage.LogoImageUrl = LogoImage;
                entLogoImage.Id = Id;
                await AboutShowroomService.UpdateLogoImage(entLogoImage);

            }
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }

}
