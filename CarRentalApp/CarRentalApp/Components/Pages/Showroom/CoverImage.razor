@inject IImageUploadService ImageUploadServices
@inject IAboutShowroomService AboutShowroomService
<style>
    .cover-image-wrapper {
        position: relative;
        display: inline-block;
        max-width: 100%;
        width: 100%;
    }

    .cover-image {
        width: 100%;
        max-height: 300px;
        object-fit: cover;
        border-radius: 8px;
    }

    .upload-overlay {
        position: absolute;
        bottom: 10px;
        right: 10px;
        background: rgba(0,0,0,0.6);
        color: white;
        padding: 8px;
        border-radius: 50%;
        cursor: pointer;
        transition: background 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .upload-overlay:hover {
            background: rgba(0,0,0,0.8);
        }

    .hidden-file-input {
        display: none;
    }

    /* Font Awesome camera icon size */
    .upload-overlay i {
        font-size: 18px;
    }


</style>

<div class="cover-image-wrapper">
   

        <img src="@coverImage" class="cover-image" alt="Cover Image" />


  

    <label class="upload-overlay">
        <i class="bi bi-camera-fill"></i>
        <InputFile OnChange="HandleCoverImageUpload" accept=".jpg,.jpeg,.png,.gif,.jfif,.avif" class="hidden-file-input" />
    </label>
</div>


@code {
    private EntCoverImage? entCoverImage = new();
    private string ErrorMessage = "";
    [Parameter]public string coverImage { get; set; }
    [Parameter]public string Id { get; set; }

    private async Task HandleCoverImageUpload(InputFileChangeEventArgs e)
    {
        ErrorMessage = "";
        try
        {
            if (e.File is not null && entCoverImage != null)
            {

                coverImage = await ImageUploadServices.UploadImageAsync(e.File, "coverimage");
                entCoverImage.CoverImageUrl = coverImage;
                entCoverImage.Id = Id;
                await AboutShowroomService.UpdateCoverImage(entCoverImage);

                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }

}
